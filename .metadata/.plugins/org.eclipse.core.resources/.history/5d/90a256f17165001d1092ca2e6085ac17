/**
 * 
 */
package com.tcs.service;

import java.util.Scanner;

import com.tcs.bean.Login;
import com.tcs.bean.*;
import com.tcs.bean.Student;
import com.tcs.dao.UserDaoImp;
import com.tcs.dao.UserDaoInterface;

/**
 * @author Administrator
 *
 */
public class UserServiceImp implements UserServiceInterface{
	Scanner sc = new Scanner(System.in);
	AdminServiceInterface asi = new AdminServiceImp();
	StudentServiceInterface ssi = new StudentServiceImp();
	ProfessorServiceInterface psi = new ProfessorServiceImp();
	UserDaoInterface udi = new UserDaoImp();
	Login l = new Login();
	Student s = new Student();
	CourseCatalogue cc = new CourseCatalogue();
	
	/*
	 * @method : adminLogin
	 * This method checks for admin credentials and display Admin menu if login successful
	 * 
	 * @param : String username, String password
	 */
	@Override
	public void adminLogin(String username, String password) {
		// TODO Auto-generated method stub
			System.out.println("Login Successful.");
			boolean a = true;
			while(a) {
			System.out.println("--Admin Menu--");
			System.out.println();
			System.out.println("1.Approval of Student\n2.Generate Report Card\n3.Add Professor\n4.Add Course\n5.Remove Course\n6.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: asi.approvalForStudent();
					break;
			case 2: asi.generateReportCard();
					break;
			case 3: System.out.println("Enter Username : ");
					String usernameP = sc.nextLine();
					System.out.println("Enter Password : ");
					String passwordP = sc.nextLine();
					asi.addProfessor(usernameP,passwordP);
					break;
			case 4: System.out.println("Enter Course ID : ");
					int courseId = sc.nextInt();sc.nextLine();
					System.out.println("Enter Course Name : ");
					String course = sc.nextLine();
					System.out.println("Enter Professor Name : ");
					String professor = sc.nextLine();
					System.out.println("Enter Semester : ");
					int sem = sc.nextInt();
					System.out.println("Enter Course Price : ");
					float coursePrice = sc.nextInt();
					asi.addCourse(courseId,course,professor, sem, coursePrice);
					break;
			case 5: System.out.println("Enter Course Name : ");
					String coursename = sc.nextLine();
					System.out.println("Enter Professor Name : ");
					String prof = sc.nextLine();
					System.out.println("Enter Semester : ");
					int semester = sc.nextInt();
					asi.removeCourse(coursename, prof, semester);
					break;
			case 6: a = false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
		}
		}
	}

	/*
	 * @method : userLogin
	 * This method checks for login credentials and implements required if matches the role
	 * 
	 * @param : String username, String password, String role
	 */
	@Override
	public void userLogin(String username, String password, String role) {
		// TODO Auto-generated method stub
		if(udi.userLogin(username, password, role) && role.equalsIgnoreCase("admin"))  {
			adminLogin(username,password);
		}
		else if(role.equalsIgnoreCase("professor") && udi.userLogin(username, password, role)) {
			professorLogin(username,password);
		}
		else if(role.equalsIgnoreCase("student") && udi.userLogin(username, password, role)) {
			studentLogin(username,password);
		}
		else {
			throw new NullPointerException("Please give valid role.");
		}
	}

	/*
	 * @method : professorLogin
	 * This method checks for professor credentials and display professor menu if login successful
	 * 
	 * @param : String username, String password
	 */
	@Override
	public void professorLogin(String username, String password) {
		// TODO Auto-generated method stub
		
			System.out.println("Login Successful.");
			boolean p = true;
			while(p) {
			System.out.println("--Professor Menu--");
			System.out.println();
			System.out.println("1.Add Grades\n2.View Course Enrolled Students\n3.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: System.out.println("Enter Course Name : ");
					String course = sc.nextLine();
					psi.addGrades(username,course);
					break;
			case 2: System.out.println("Enter Course Name : ");
					String courseName = sc.nextLine();
					psi.viewCourseEnrolledStudents(username,courseName);
					break;
			case 3: p = false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
			}
		}
	}

	/*
	 * @method : studentLogin
	 * This method checks for student credentials and display student menu if login successful
	 * 
	 * @param : String username, String password
	 */
	@Override
	public void studentLogin(String username, String password) {
		// TODO Auto-generated method stub
		Student st = new Student();
		SemesterRegistration sr = new SemesterRegistration();
			System.out.println("Login Successful.");
			boolean s = true;
			while(s) {
			System.out.println("--Student Menu--");
			System.out.println();
			System.out.println("1.Add Course\n2.Drop Course\n3.View Report Card\n4.Make Payment\n5.Semester Registration\n6.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: System.out.println("Enter Semester : ");
					int seme = sc.nextInt();sc.nextLine();
					System.out.println("Available Courses : ");
					for(int i=0;i<cc.getCourseList()[seme-1].size();i++) {
						System.out.println(cc.getCourseList()[seme-1].get(i).getCourseName() + "-" + cc.getCourseList()[seme-1].get(i).getProfessor());
					}
					System.out.println("Enter courseName :");
					String courseName = sc.nextLine();
					System.out.println("Enter Professor :");
					String professor = sc.nextLine();
					ssi.addCourse(courseName, professor,username);
					break;
			case 2: System.out.println("Registered Courses : ");
					int index = -1;
					for(int i=0;i<st.getStudentList().size();i++) {
						if(st.getStudentList().get(i).getsName().equals(username)) {
							index = i;
							break;
						}
					}
					for(int i=0;i<st.getStudentList().get(index).getCourseList().size();i++) {
					System.out.println(st.getStudentList().get(index).getCourseList().get(i).getCourseName() + "-" + st.getStudentList().get(index).getCourseList().get(i).getProfessor());
					}
					System.out.println("Enter courseName :");
					String course = sc.nextLine();sc.nextLine();
					System.out.println("Enter Professor :");
					String professorName = sc.nextLine();
					
					ssi.dropCourse(course, professorName,username);
					break;
			case 3: ssi.viewReportCard(username);
					break;
			case 4: ssi.payFee(username);
					System.out.println("Choose Payment Method : ");
					System.out.println("1.Online Payment\n2.Offline Payment");
					break;
			case 5: System.out.println("Enter Semester : ");
					int semesterNumber = sc.nextInt();sc.nextLine();
					ssi.semesterRegistration(username,semesterNumber);
					System.out.println("Available Courses : ");
					for(int i=0;i<cc.getCourseList()[semesterNumber-1].size();i++) {
						System.out.println(cc.getCourseList()[semesterNumber-1].get(i).getCourseName() + "-" + cc.getCourseList()[semesterNumber-1].get(i).getProfessor());
					}
					int b = 1;
					while(b==1) {
					System.out.println("Enter courseName :");
					String c = sc.nextLine();
					System.out.println("Enter Professor :");
					String p = sc.nextLine();
					ssi.addCourse(c, p,username);
					System.out.println("1.Add more\n2.Stop");
					b = sc.nextInt();sc.nextLine();
					}
					break;
			case 6: s=false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
			}
			}	
	}
}
