/**
 * 
 */
package com.tcs.bean;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.lang.*;
import java.util.Map;
import java.util.TreeMap;
import java.util.stream.Collector;

/**
 * @author Administrator
 *
 */
public class Student {
	private int sID;
	private int noOfCoursesEnrolled;
	private String sName;
	private String sAddress;
	ArrayList<Course> courseList = new ArrayList<>();
	ArrayList<Student> studentList = new ArrayList<>();

	/**
	 * @return the sID
	 */
	
	public Student(String sName) {
		this.sName=sName;
	}
	public Student(String sName, ArrayList<Course> courseList) {
		super();
		this.sName = sName;
		this.courseList = courseList;
	}
	public int getsID() {
		return sID;
	}
	/**
	 * @param sID the sID to set
	 */
	public void setsID(int sID) {
		this.sID = sID;
	}
	/**
	 * @return the noOfCoursesEnrolled
	 */
	
	public int getNoOfCoursesEnrolled() {
		return noOfCoursesEnrolled;
	}
	public ArrayList<Course> getCourseList() {
		return courseList;
	}
	public void setCourseList(ArrayList<Course> courseList) {
		this.courseList = courseList;
	}
	/**
	 * @param noOfCoursesEnrolled the noOfCoursesEnrolled to set
	 */
	public void setNoOfCoursesEnrolled(int noOfCoursesEnrolled) {
		this.noOfCoursesEnrolled = noOfCoursesEnrolled;
	}
	/**
	 * @return the sName
	 */
	public String getsName() {
		return sName;
	}
	/**
	 * @param sName the sName to set
	 */
	public void setsName(String sName) {
		this.sName = sName;
	}
	/**
	 * @return the sAddress
	 */
	public String getsAddress() {
		return sAddress;
	}
	/**
	 * @param sAddress the sAddress to set
	 */
	public void setsAddress(String sAddress) {
		this.sAddress = sAddress;
	}
	
	public void putMethod() {
		courseList.add(new Course("C","Sri"));
		courseList.add(new Course("Java","Sai"));
		courseList.add(new Course("Python","Sri"));
		studentList.add(new Student("upendra@gmail.com",courseList));
		studentList.add(new Student("sunitha@gmail.com",courseList));
	}
	public void addCourse(Course course, String username) {
		putMethod();
		ArrayList<Course> cl = new ArrayList<>();
		cl.add(course);
		for(int i=0;i<studentList.size();i++){
			if(studentList.get(i).getsName().equalsIgnoreCase(username)) {
				cl.addAll(studentList.get(i).getCourseList());
				studentList.remove(i);
				studentList.add(new Student(username,cl));
				break;
			}
		}
		System.out.println("Successfully Added."+cl.toString()+studentList.get(1).getCourseList().toString());
	}
	public void dropCourse(Course course,String username) {
		putMethod();
		ArrayList<Course> cl = new ArrayList<>();
		for(int i=0;i<studentList.size();i++){
			if(studentList.get(i).getsName().equalsIgnoreCase(username)) {
				cl.addAll(studentList.get(i).getCourseList());
				System.out.println(cl.toString());
				for(int j=0;j<cl.size();j++) {
					if(cl.getCourseName().equalsIgnoreCase(course.getCourseName()))
						cl.remove(j);
					break;
				}
				System.out.println(cl.toString());
				studentList.remove(i);
				studentList.add(new Student(username,cl));
				break;
			}
		}
		System.out.println("Successfully Removed."+cl.toString()+studentList.get(1).getCourseList().toString()+studentList.get(1).sName);
	}
}
