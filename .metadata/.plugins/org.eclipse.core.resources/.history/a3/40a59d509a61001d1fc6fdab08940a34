/**
 * 
 */
package com.tcs.service;

import java.util.Scanner;

import com.tcs.bean.Login;

/**
 * @author Administrator
 *
 */
public class UserServiceImp implements UserServiceInterface{
	Scanner sc = new Scanner(System.in);
	AdminServiceInterface asi = new AdminServiceImp();
	StudentServiceInterface ssi = new StudentServiceImp();
	ProfessorServiceInterface psi = new ProfessorServiceImp();
	@Override
	public void userRegistration() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void adminLogin(String username, String password) {
		// TODO Auto-generated method stub
		Login la = new Login(username,password);
		if(la.verifyAdminCredentials(la)) {
			boolean a = true;
			while(a) {
			System.out.println("--Admin Menu--");
			System.out.println();
			System.out.println("1.Approval of Student\n2.Generate Report Card\n3.Add Professor\n4.Add Course\n5.Remove Course\n6.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: asi.approval();
					break;
			case 2: asi.generateReportCard();
					break;
			case 3: asi.addProfessor();
					break;
			case 4: asi.addCourse();
					break;
			case 5: asi.removeCourse();
					break;
			case 6: a = false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
		}
		}
		else {
			throw new NullPointerException("Invalid Credentials.");
		}
	}

	@Override
	public void userLogin(String username, String password, String role) {
		// TODO Auto-generated method stub
		if(role.equalsIgnoreCase("admin"))  {
			adminLogin(username,password);
		}
		else if(role.equalsIgnoreCase("professor")) {
			professorLogin(username,password);
		}
		else if(role.equalsIgnoreCase("student")) {
			studentLogin(username,password);
		}
		else {
			throw new NullPointerException("Please give valid role.");
		}
	}

	@Override
	public void professorLogin(String username, String password) {
		// TODO Auto-generated method stub
		Login la = new Login(username,password);
		if(la.verifyProfessorCredentials(la)) {
			boolean p = true;
			while(p) {
			System.out.println("--Professor Menu--");
			System.out.println();
			System.out.println("1.Add Grades\n2.View Course Enrolled Students\n3.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: psi.addGrades();
					break;
			case 2: psi.viewCourseEnrolledStudents();
					break;
			case 3: p = false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
			}
		}
		}
		else {
			throw new NullPointerException("Invalid Credentials.");
		}
	}

	@Override
	public void studentLogin(String username, String password) {
		// TODO Auto-generated method stub
		Login la = new Login(username,password);
		if(la.verifyStudentCredentials(la)) {
			boolean s = true;
			while(s) {
			System.out.println("--Student Menu--");
			System.out.println();
			System.out.println("1.Add Course\n2.Drop Course\n3.View Report Card\n4.Make Payment\n5.Semester Registration\n6.Log Out");
			int op = sc.nextInt();sc.nextLine();
			switch(op) {
			case 1: System.out.println("Enter courseName :");
					String courseName = sc.nextLine();
					System.out.println("Enter Professor :");
					String professor = sc.nextLine();
					ssi.addCourse(courseName, professor,username);
					break;
			case 2: System.out.println("Enter courseName :");
					String course = sc.nextLine();
					System.out.println("Enter Professor :");
					String professorName = sc.nextLine();
					ssi.dropCourse(course, professorName);
					break;
			case 3: ssi.viewReportCard(username);
					break;
			case 4: ssi.payFee();
					break;
			case 5: ssi.semesterRegistration();
					break;
			case 6: s=false;
					break;
			default:throw new NullPointerException("----Invalid Choice----");
			}
		}
		}
		else {
			throw new NullPointerException("Invalid Credentials.");
		}
	}

}
